global
  chroot /root
  log stdout local0
  maxconn 2048
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
  ssl-default-bind-options no-sslv3
  tune.ssl.default-dh-param 2048

defaults
  log global
  mode http
  option dontlognull
  option http-server-close
  option httpclose
  option httplog
  option redispatch
  timeout client  300000  # 5 minutes
  timeout connect 3000    # 3 seconds
  timeout server  300000  # 5 minutes

frontend public_http
  bind *:80
  default_backend letsencrypt_backend
  http-request add-header X-Forwarded-Proto: http
  option forwardfor
  redirect scheme https if !{ ssl_fc }

frontend public_https
  acl api_path path_beg /api
  acl letsencrypt_path path_beg /.well-known/acme-challenge/
  acl webserver_path path_beg /sockjs-node/
  acl polygon_path path_beg /polygon
  bind *:443 ssl crt "/root/$DOMAINNAME.pem"
  default_backend webserver
  http-response del-header Access-Control-Allow-Headers
  http-response del-header Access-Control-Allow-Methods
  http-response del-header Access-Control-Allow-Origin
  http-response add-header Access-Control-Allow-Headers "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
  http-response add-header Access-Control-Allow-Origin "*"
  option forwardfor
  use_backend letsencrypt_backend if letsencrypt_path
  use_backend webserver if webserver_path
  use_backend polygon if polygon_path

backend letsencrypt_backend
  server letsencrypt "127.0.0.1:$CERTBOT_PORT"

backend webserver
  server webserver "$WEBSERVER_URL"

backend polygon
	http-request set-header Connection keep-alive
  http-request add-header Host "$POLYGON_RPC_HOST"
	http-request set-header X-Forwarded-Proto https
  http-request replace-path /polygon "$POLYGON_RPC_PATH"
  http-response add-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
  server polygon "$POLYGON_RPC_HOST:$POLYGON_RPC_PORT" "$POLYGON_RPC_PROTOCOL" verify required check check-ssl check-sni "$POLYGON_RPC_HOST" sni "str($POLYGON_RPC_HOST)" ca-file ca-certs.pem
